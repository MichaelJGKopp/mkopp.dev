# Multi-stage Dockerfile for an Nx Angular SSR application

# Debian-based Node.js image for balance of size and compatibility.
FROM node:lts-trixie-slim AS builder

WORKDIR /app

COPY package.json package-lock.json* nx.json ./
COPY tsconfig.base.json ./
RUN npm ci --legacy-peer-deps

COPY . .
RUN npx nx build mysite-frontend


FROM node:lts-trixie-slim AS runner

WORKDIR /app

# Create a non-root user and group for security.
RUN groupadd --gid 1001 nodejs && \
    useradd --uid 1001 --gid 1001 -m nodejs

# Set the environment to production.
ENV NODE_ENV=production

# Copy the standalone server output from the builder stage.
# This includes only the necessary production node_modules, assets, and server files.
# The --chown flag ensures the non-root user owns the files.
COPY --from=builder --chown=nodejs:nodejs /app/dist/apps/mysite-frontend .

USER nodejs

EXPOSE 4000

CMD ["node", "server/server.mjs"]
